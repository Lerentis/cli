name: goreleaser

on:
  pull_request:
  push:
    tags:
      - 'v*'
    branches:
      - "mac-packaging"
jobs:
  goreleaser:
    runs-on: macos-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Gon using homebrew
        run: brew install Bearer/tap/gon

      - name: Go Init
        uses: ./.github/actions/go_init

      - run: go run main.go --version

      # - name: Run GoReleaser (publish)
      #   uses: goreleaser/goreleaser-action@v5
      #   if: ${{ github.event_name != 'pull_request' }}
      #   with:
      #     version: latest
      #     args: release --clean
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          # The certificates in a PKCS12 file encoded as a base64 string
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          # The password used to import the PKCS12 file.
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}

      - name: Run GoReleaser (dry run)
        uses: goreleaser/goreleaser-action@v5
        # if: ${{ github.event_name == 'pull_request' }}
        with:
          version: latest
          args: release --clean --snapshot --skip-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AC_PASSWORD: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}

      # - name: Upload assets
      #   uses: actions/upload-artifact@v4
      #   # only upload artifacts on pull requests
      #   if: ${{ github.event_name == 'pull_request' }}
      #   with:
      #     name: test-release
      #     path: dist/*
